### End-to-end setup cheat-sheet

*(Windows 10/11 + RTX 2070 → WSL2 Ubuntu → ready to train your Transformer)*

| Phase                                       | Command / action (run in **Admin PowerShell** unless noted)                                                                                                                                                                                                                             |                                                                    |
| ------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------ |
| **1 · Prep Windows**                        | • `dism /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart`  <br>• `dism /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart`  <br>• *(optional but safe)* `dism … Microsoft-Hyper-V-All /all /norestart`  <br>• **Reboot** |                                                                    |
| **2 · Install WSL 2 + Ubuntu**              | `wsl --install -d Ubuntu-22.04` → reboot → `wsl` → pick Linux username/password                                                                                                                                                                                                         |                                                                    |
| **3 · GPU driver for WSL**                  | Download & install NVIDIA “CUDA on WSL” driver (≥ 535.xx) from NVIDIA’s site → reboot                                                                                                                                                                                                   |                                                                    |
| **4 · Verify virtualization & service**     | In Admin PowerShell:  <br>\`systeminfo                                                                                                                                                                                                                                                  | find "Virtualization"` → “**Yes**”  <br>`Start-Service vmcompute\` |
| **5 · Launch VS Code in WSL**               | *(inside WSL shell)*<br>`sudo apt update && sudo apt install -y wget unzip python-is-python3`  <br>`git clone https://github.com/yourname/scratch-transformer.git` <br>`cd scratch-transformer && code .` <br>(*opens VS Code with “WSL – Ubuntu” badge*)                               |                                                                    |
| **6 · Install Miniconda (in WSL terminal)** | `wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh`  <br>`bash Miniconda3-latest-Linux-x86_64.sh` → answer **yes** to `conda init` → reopen terminal <br>`conda config --set auto_activate_base false`                                                         |                                                                    |
| **7 · Create project env**                  | `conda create -n scratch-LM python=3.11 -y` <br>`conda activate scratch-LM` <br>`pip install torch==2.2.* --index-url https://download.pytorch.org/whl/cu121` <br>`pip install "numpy<2" tokenizers datasets tqdm rich`                                                                 |                                                                    |
| **8 · Sanity-check CUDA**                   | `python - <<'PY'\nimport torch, platform, numpy as np\nprint('NumPy', np.__version__)\nprint('CUDA OK:', torch.cuda.is_available())\nprint('Device:', torch.cuda.get_device_name(0))\nPY` <br>Expected: CUDA OK True & “NVIDIA GeForce RTX 2070”                                        |                                                                    |
| **9 · Download + clean data**               | `chmod +x scripts/get_data.sh` <br>`./scripts/get_data.sh` → ✅ WikiText-2 ready                                                                                                                                                                                                         |                                                                    |
| **10 · Train tokenizer**                    | `python scripts/train_tokenizer.py --vocab_size 16000` → ✅ Tokenizer saved to `data/tokenizer/v1/`                                                                                                                                                                                      |                                                                    |
| **11 · Smoke test round-trip**              | `python - <<'PY'\nfrom tokenizers import Tokenizer\ntok=Tokenizer.from_file('data/tokenizer/v1/tokenizer.json')\nprint(tok.encode('WSL is ready!').ids)\nPY`                                                                                                                            |                                                                    |
| **12 · Commit Week-1 milestone**            | `git add data scripts && git commit -m "Week-1: data + tokenizer ready"`                                                                                                                                                                                                                |                                                                    |

**You now have:**

* WSL 2 Ubuntu with GPU access
* Conda env `scratch-LM` pinned to NumPy 1.26 + CUDA-enabled PyTorch
* Cleaned WikiText-2 corpus and a 16 k-vocab BPE tokenizer

Next milestone: implement `scratch_transformer/layers.py` and start the training loop.
